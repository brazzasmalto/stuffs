{
    "Regions": {
      "North Europe": {
        "Name": "Ireland",
        "AZ": 3
      },
      "Germany West Central": {
        "Name": "Frankfurt",
        "AZ": 3
      }
    },
    {
     "Pre-requistes"
      "InstallCLI": "Azure CLI is installed on your local machine"
      "InstallChocolatey": {
        "LoginOnPowershellAsAdim": "First, ensure that you are using an administrative shell"
        "CheckIfGetExecutionPolicy": "If it returns Restricted, then run Set-ExecutionPolicy AllSigned or Set-ExecutionPolicy Bypass -Scope Process"
        "CmdSetExecutionPolicy": "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))"
        "CmdSetChoco": "Type choco or choco -? now, or see Getting Started for usage instructions"
       }, 
       "InstallTerraform": "choco install terraform"
       "InstallAzureToolkitForIntell": "Azure Toolkit for IntelliJ"
    },
    "CreateAKSClusterWithAzCmd": {
      "CmdLogin": "az login",
      "CmdCreateResourceGroup": "az group create --name BrakinReG --location francecentral",
      "CmdCreateVnet": "az network vnet create -g BrakinReG -n BrakinVnet --address-prefix 10.0.0.0/16 --subnet-name BrakinAksSub --subnet-prefix 10.0.0.0/24 --location francecentral",
      "CmdCreateAKSCluster": "az aks create --resource-group BrakinReG --name BrakinAKSCluster --node-count 3 --enable-addons monitoring --generate-ssh-keys",
      "CmdShowAKSCluster": "az aks show --name BrakinAKSCluster --resource-group BrakinReG",
      "CmdCreateACR": "az acr create --resource-group BrakinReG --name BrakinACRImages --sku Standard --location francecentral",
      "CmdConnectAKSCluster": "az aks get-credentials --resource-group BrakinReG --name BrakinAKSCluster --overwrite-existing"
      "CmdDeleteAKSCluster": "az aks delete --name BrakinAKSCluster --resource-group BrakinReG"
    },
    "CreateAKSClusterWithAzCmd": {
    },
    {
     "CmdDeployingDockerImagesFromACRIintoAKSCluster": "az aks update -n myAKSCluster -g myResourceGroup --attach-acr BrakinACRImages"
    },
    "PowerShellConnect": {
      "CmdLogin": "Login-AzureRmAccount",
      "CmdCreateResourceGroup": "New-AzureRmResourceGroup -Name BrakinResource `-Location centralfrench",
      "CmdCreateVnet" : "New-AzureRmVirtualNetwork -ResourceGroupName BrakinResource -Name BrakinVNet `-AddressPrefix 192.168.0.0/16 -Location centralfrench"
    },
    "Refs": {
      "Url1": "https://githubhelp.com/dimitrietataru/azure",
      "Url2": "https://www.coachdevops.com/2020/10/how-to-create-aks-cluster-using-aure.html"
      "Url3": "https://platformops.dev/azure-cloud/aks-cluster-az-cli"
      "Url4": "https://docs.microsoft.com/en-us/azure/cloud-adoption-framework/ready/enterprise-scale/terraform-module-caf-enterprise-scale"
    },
    "PowerShellInstallCliAzure": {
      "Cmd": "$ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile .\\AzureCLI.msi; Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'; rm .\\AzureCLI.msi"
    },
    "AZCmdlist": {
     "GetAcountList": "az account list",
     "GetAcountListLocations": "az account list-locations -o table"
    }
}
